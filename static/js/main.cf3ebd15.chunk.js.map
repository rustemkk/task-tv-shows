{"version":3,"sources":["components/ShowsPage/index.module.scss","components/RatingLabel/index.module.scss","components/ShowPage/index.module.scss","components/App/index.module.scss","modules/shows/constants.js","modules/shows/actions.js","modules/shows/selectors.js","components/ShowPage/index.js","components/RatingLabel/index.js","components/ShowsPage/index.js","components/App/index.js","modules/shows/reducer.js","utils/index.js","modules/shows/schemas.js","modules/shows/sagas.js","modules/index.js","modules/shows/index.js","rootReducer.js","rootSaga.js","index.js","store.js"],"names":["module","exports","LOAD_SHOWS_SUCCESS","loadShowsSuccess","shows","entities","result","type","showConstants","showsIds","getShowsEntities","state","get","getAllShows","createSelector","map","id","sort","a","b","name","getShowById","showId","mapDispatchToProps","loadShow","connect","ownProps","show","location","useHistory","useLocation","console","log","useEffect","className","s","Show","Image","alt","src","RatingLabel","value","cn","ColorGrey","ColorGreen","ColorGold","loadShows","history","Shows","key","onClick","push","Rating","Name","premiered","substring","Genre","genres","join","App","exact","path","component","ShowsPage","ShowPage","combineReducers","action","showsConstants","uniq","apiGET","fetch","method","then","res","json","showsSchema","schema","Entity","loadShowTask","loadShowsTask","watchLoadShow","watchLoadShows","normalized","normalize","put","showsActions","result2","takeEvery","reducer","sagas","reducers","modules","forEach","rootSaga","all","ReactDOM","render","store","sagaMiddleware","createSagaMiddleware","createStore","rootReducer","compose","applyMiddleware","run","configureStore","basename","document","getElementById"],"mappings":"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","file":"static/js/main.cf3ebd15.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Shows\":\"ShowsPage_Shows__2RD5-\",\"Show\":\"ShowsPage_Show__zequl\",\"Rating\":\"ShowsPage_Rating__29Fbi\",\"Name\":\"ShowsPage_Name__2K61q\",\"Genre\":\"ShowsPage_Genre__R6emS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RatingLabel\":\"RatingLabel_RatingLabel__2MKcz\",\"ColorGrey\":\"RatingLabel_ColorGrey__2I3Zn\",\"ColorGreen\":\"RatingLabel_ColorGreen__C9iRK\",\"ColorGold\":\"RatingLabel_ColorGold__2Lxns\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Show\":\"ShowPage_Show__Oc3P5\",\"Image\":\"ShowPage_Image__2lGkK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1sVak\"};","export const LOAD_SHOW_REQUEST = 'contacts/LOAD_SHOW_REQUEST';\nexport const LOAD_SHOW_SUCCESS = 'contacts/LOAD_SHOW_SUCCESS';\n\nexport const LOAD_SHOWS_REQUEST = 'contacts/LOAD_SHOWS_REQUEST';\nexport const LOAD_SHOWS_SUCCESS = 'contacts/LOAD_SHOWS_SUCCESS';","import * as showConstants from \"./constants\";\n\n\nexport const loadShow = (showId) => ({\n  type: showConstants.LOAD_SHOW_REQUEST,\n  showId,\n});\n\nexport const loadShows = () => ({\n  type: showConstants.LOAD_SHOWS_REQUEST,\n});\n\nexport const loadShowsSuccess = ({ entities: { shows }, result }) => ({\n  type: showConstants.LOAD_SHOWS_SUCCESS,\n  shows,\n  showsIds: result,\n});","import { get } from 'lodash';\nimport { createSelector } from 'reselect';\n\n\nexport const getShowsEntities = (state) =>\n  get(state, 'shows.shows');\n\nexport const getShowsIds = (state) =>\n  get(state, 'shows.showsIds');\n\nexport const getAllShows = createSelector(\n  getShowsEntities,\n  getShowsIds,\n  (shows, showsIds) => showsIds.map(id => shows[id]).sort((a, b) => a.name > b.name ? 1 : -1)\n);\n\nexport const getShowById = (showId) => createSelector(\n  getShowsEntities,\n  (shows) => shows[showId]\n);","import { get } from 'lodash';\nimport PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory, useLocation } from \"react-router-dom\";\n// import RatingLabel from 'components/RatingLabel';\nimport { loadShow } from 'modules/shows/actions';\nimport { getShowById } from 'modules/shows/selectors';\n\nimport s from './index.module.scss';\n\n\nconst mapStateToProps = (state, ownProps) => {\n  const showId = get(ownProps, 'match.params.showId');\n\n  return {\n    show: getShowById(showId)(state),\n    showId,\n  };\n};\n\nconst mapDispatchToProps = {\n  loadShow,\n};\n\nconst ShowPage = ({ loadShow, show, showId }) => {\n\n  const history = useHistory();\n  const location = useLocation();\n\n  console.log(1, location);\n  console.log(2, showId);\n  console.log(3, show);\n\n  useEffect(() => {\n    if (showId && !show) {\n      loadShow(showId);\n    }\n  }, [loadShow, showId, show]);\n\n  return !show ? null : (\n    <div className={s.Show}>\n      {/* \n        1 picture\n        2 title\n        3 description\n        4 episodes list\n      */}\n\n      <img className={s.Image} alt={show.name} src={get(show, 'image.original')} />\n\n      {/* {shows.map(show =>\n        <div className={s.Show} key={show.id} onClick={() => history.push(`/show/${show.id}`)}>\n          <RatingLabel className={s.Rating} value={get(show, 'rating.average')} />\n          <img alt={show.name} src={get(show, 'image.medium')} />\n          <span className={s.Name}>\n            {show.name}\n            {', '}\n            {show.premiered.substring(0, 4)}\n          </span>\n          <span className={s.Genre}>\n            {show.genres.join(', ')}\n          </span>\n        </div>\n      )} */}\n    </div>\n  );\n}\n\nShowPage.propTypes = {\n  loadShow: PropTypes.func.isRequired,\n  show: PropTypes.object,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowPage);","import cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport s from './index.module.scss';\n\n\nconst RatingLabel = ({ className, value }) => {\n  return !value ? null : (\n    <div\n      className={cn(\n        className,\n        s.RatingLabel,\n        value >= 4 && s.ColorGrey,\n        value >= 7 && s.ColorGreen,\n        value >= 9 && s.ColorGold,\n      )}\n    >\n      {value}\n    </div>\n  );\n}\n\nRatingLabel.propTypes = {\n  className: PropTypes.string,\n  value: PropTypes.number,\n};\n\nexport default RatingLabel;","import { get } from 'lodash';\nimport PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\n\nimport RatingLabel from 'components/RatingLabel';\nimport { loadShows } from 'modules/shows/actions';\nimport { getAllShows } from 'modules/shows/selectors';\n\nimport s from './index.module.scss';\n\n\nconst mapStateToProps = (state) => ({\n  shows: getAllShows(state),\n})\n\nconst mapDispatchToProps = {\n  loadShows,\n};\n\nconst ShowsPage = ({ loadShows, shows }) => {\n\n  const history = useHistory();\n\n  useEffect(() => {\n    loadShows();\n  }, [loadShows]);\n\n  return (\n    <div className={s.Shows}>\n      {shows.map(show =>\n        <div className={s.Show} key={show.id} onClick={() => history.push(`/show/${show.id}`)}>\n          <RatingLabel className={s.Rating} value={get(show, 'rating.average')} />\n          <img alt={show.name} src={get(show, 'image.medium')} />\n          <span className={s.Name}>\n            {show.name}\n            {', '}\n            {show.premiered.substring(0, 4)}\n          </span>\n          <span className={s.Genre}>\n            {show.genres.join(', ')}\n          </span>\n        </div>\n      )}\n    </div>\n  );\n}\n\nShowsPage.propTypes = {\n  loadShows: PropTypes.func.isRequired,\n  shows: PropTypes.array,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowsPage);","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport ShowPage from 'components/ShowPage';\nimport ShowsPage from 'components/ShowsPage';\n\nimport s from './index.module.scss';\n\n\nconst App = () => {\n  return (\n    <div className={s.App}>\n      <Switch>\n        <Route exact path=\"/\" component={ShowsPage} />\n        <Route exact path=\"/show/:showId\" component={ShowPage} />\n        <Route component={() => <div>page not found</div>} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;","import { uniq } from 'lodash';\nimport { combineReducers } from 'redux';\n\nimport * as showsConstants from './constants';\n\n\nconst shows = (state = {}, action) => {\n  switch (action.type) {\n    case showsConstants.LOAD_SHOWS_SUCCESS:\n      return { state, ...action.shows };\n    default:\n      return state;\n  }\n};\n\nconst showsIds = (state = [], action) => {\n  switch (action.type) {\n    case showsConstants.LOAD_SHOWS_SUCCESS:\n      return uniq([...state, ...action.showsIds]);\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  shows,\n  showsIds,\n});","const apiUrl = 'https://api.tvmaze.com';\n\nexport const apiGET = (path) => {\n  return fetch(`${apiUrl}${path}`, { method: 'GET' })\n    .then(res => res.json());\n}","import { schema } from 'normalizr';\n\n\nconst showSchema = new schema.Entity('shows');\n\nexport const showsSchema = [showSchema];","import { put, takeEvery } from 'redux-saga/effects';\nimport { normalize } from 'normalizr';\n\nimport { apiGET } from 'utils';\n\nimport * as showsActions from './actions';\nimport * as showConstants from './constants';\nimport { showsSchema } from './schemas';\n\n\nfunction* loadShowTask({ showId }) {\n  try {\n    const result = yield apiGET(`/shows/${showId}`);\n    console.log('result1', result);\n    const normalized = normalize([result], showsSchema);\n    yield put(showsActions.loadShowsSuccess(normalized));\n    const result2 = yield apiGET(`/shows/${showId}/episodes`);\n    console.log('result2', result2);\n    // const normalized = normalize([result], showsSchema);\n    // yield put(showsActions.loadShowsSuccess(normalized));\n  } catch (err) {\n    console.log('loadShowTaskError', err);\n  }\n}\n\nfunction* loadShowsTask() {\n  try {\n    const result = yield apiGET('/search/shows?q=girls');\n    const normalized = normalize(result.map(s => s.show), showsSchema);\n    yield put(showsActions.loadShowsSuccess(normalized));\n  } catch (err) {\n    console.log('loadShowsTaskError', err);\n  }\n}\n\nfunction* watchLoadShow() {\n  yield takeEvery(showConstants.LOAD_SHOW_REQUEST, loadShowTask);\n}\n\nfunction* watchLoadShows() {\n  yield takeEvery(showConstants.LOAD_SHOWS_REQUEST, loadShowsTask);\n}\n\nexport default [\n  watchLoadShow(),\n  watchLoadShows(),\n];","import shows from './shows';\n\n\nexport default [\n  shows,\n];\n","import reducer from './reducer';\nimport sagas from './sagas';\n\n\nexport default {\n  name: 'shows',\n  reducer,\n  sagas,\n};","import { combineReducers } from 'redux';\n\nimport modules from './modules';\n\n\nlet reducers = {};\n\nmodules.forEach(module => {\n  if (module.reducer) {\n    reducers = { ...reducers, [module.name]: module.reducer };\n  }\n});\n\nexport default combineReducers(reducers);","import { all } from 'redux-saga/effects';\n\nimport modules from './modules';\n\n\nlet sagas = [];\n\nmodules.forEach(module => {\n  if (module.sagas) {\n    sagas = [...sagas, ...module.sagas];\n  }\n});\n\nexport default function* rootSaga() {\n  yield all(sagas);\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from 'components/App';\n\nimport './index.scss';\nimport configureStore from './store';\n\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <BrowserRouter basename=\"/task-tv-shows\">\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);","import { applyMiddleware, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './rootReducer';\nimport rootSaga from './rootSaga';\n\n\nexport default () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(\n    rootReducer,\n    compose(applyMiddleware(sagaMiddleware))\n  );\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n}"],"sourceRoot":""}