{"version":3,"sources":["components/ShowPage/index.module.scss","components/ShowsPage/index.module.scss","components/RatingLabel/index.module.scss","components/App/index.module.scss","modules/episodes/actions.js","modules/episodes/constants.js","modules/episodes/selectors.js","modules/shows/actions.js","modules/shows/constants.js","modules/shows/selectors.js","components/ShowPage/index.js","components/RatingLabel/index.js","components/ShowsPage/index.js","components/App/index.js","modules/episodes/reducer.js","utils/index.js","modules/episodes/schemas.js","modules/episodes/sagas.js","modules/episodes/index.js","modules/shows/reducer.js","modules/shows/schemas.js","modules/shows/sagas.js","modules/index.js","modules/shows/index.js","rootReducer.js","rootSaga.js","index.js","store.js"],"names":["module","exports","loadEpisodesSuccess","type","episodes","entities","episodesIds","result","getEpisodesEntities","state","get","getAllEpisodes","createSelector","map","id","sort","a","b","airdate","getEpisodesByShowId","showId","filter","episode","loadShowsSuccess","shows","showsIds","getShowsEntities","getAllShows","name","getShowById","mapDispatchToProps","loadEpisodes","loadShow","connect","ownProps","show","history","useHistory","useEffect","length","className","s","Show","ImageContainer","Image","alt","src","ContentContainer","Name","premiered","substring","Summary","dangerouslySetInnerHTML","__html","summary","ShowProperty","genres","join","language","Episodes","Episode","key","onClick","push","season","number","RatingLabel","value","cn","ColorGrey","ColorGreen","ColorGold","loadShows","Shows","Rating","Genre","App","exact","path","component","ShowsPage","ShowPage","combineReducers","action","uniq","apiGET","fetch","method","then","res","json","catch","err","console","log","episodesSchema","schema","Entity","loadEpisodesTask","watchLoadEpisodes","normalizedEpisodes","normalize","put","episodesActions","takeLatest","reducer","sagas","showsSchema","loadShowTask","loadShowsTask","watchLoadShow","watchLoadShows","normalizedShows","showsActions","reducers","modules","forEach","rootSaga","all","ReactDOM","render","store","sagaMiddleware","createSagaMiddleware","createStore","rootReducer","compose","applyMiddleware","run","configureStore","basename","document","getElementById"],"mappings":"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","file":"static/js/main.843fc8f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Show\":\"ShowPage_Show__Oc3P5\",\"ImageContainer\":\"ShowPage_ImageContainer__1JYG4\",\"Image\":\"ShowPage_Image__2lGkK\",\"ContentContainer\":\"ShowPage_ContentContainer__2x9mB\",\"Name\":\"ShowPage_Name__1ENwJ\",\"ShowProperty\":\"ShowPage_ShowProperty__2Keb-\",\"Episodes\":\"ShowPage_Episodes__1eEfM\",\"Episode\":\"ShowPage_Episode__15lO0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Shows\":\"ShowsPage_Shows__2RD5-\",\"Show\":\"ShowsPage_Show__zequl\",\"Rating\":\"ShowsPage_Rating__29Fbi\",\"Name\":\"ShowsPage_Name__2K61q\",\"Genre\":\"ShowsPage_Genre__R6emS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RatingLabel\":\"RatingLabel_RatingLabel__2MKcz\",\"ColorGrey\":\"RatingLabel_ColorGrey__2I3Zn\",\"ColorGreen\":\"RatingLabel_ColorGreen__C9iRK\",\"ColorGold\":\"RatingLabel_ColorGold__2Lxns\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1sVak\"};","import * as episodesConstants from './constants';\n\n\nexport const loadEpisodes = (showId) => ({\n  type: episodesConstants.LOAD_EPISODES_REQUEST,\n  showId,\n});\n\nexport const loadEpisodesSuccess = ({ entities: { episodes }, result }) => ({\n  type: episodesConstants.LOAD_EPISODES_SUCCESS,\n  episodes,\n  episodesIds: result,\n});","export const LOAD_EPISODES_REQUEST = 'episodes/LOAD_EPISODES_REQUEST';\nexport const LOAD_EPISODES_SUCCESS = 'episodes/LOAD_SHOW_SUCCESS';","import { get } from 'lodash';\nimport { createSelector } from 'reselect';\n\n\nexport const getEpisodesEntities = (state) =>\n  get(state, 'episodes.episodes');\n\nexport const getEpisodesIds = (state) =>\n  get(state, 'episodes.episodesIds');\n\nexport const getAllEpisodes = createSelector(\n  getEpisodesEntities,\n  getEpisodesIds,\n  (episodes, episodesIds) => episodesIds.map(id => episodes[id]).sort((a, b) => a.airdate > b.airdate ? -1 : 1)\n);\n\nexport const getEpisodeById = (episodeId) => createSelector(\n  getEpisodesEntities,\n  (episodes) => episodes[episodeId]\n);\n\nexport const getEpisodesByShowId = (showId) => createSelector(\n  getAllEpisodes,\n  (episodes) => episodes.filter(episode => episode.showId === showId)\n);","import * as showConstants from './constants';\n\n\nexport const loadShow = (showId) => ({\n  type: showConstants.LOAD_SHOW_REQUEST,\n  showId,\n});\n\nexport const loadShows = () => ({\n  type: showConstants.LOAD_SHOWS_REQUEST,\n});\n\nexport const loadShowsSuccess = ({ entities: { shows }, result }) => ({\n  type: showConstants.LOAD_SHOWS_SUCCESS,\n  shows,\n  showsIds: result,\n});","export const LOAD_SHOW_REQUEST = 'shows/LOAD_SHOW_REQUEST';\nexport const LOAD_SHOW_SUCCESS = 'shows/LOAD_SHOW_SUCCESS';\n\nexport const LOAD_SHOWS_REQUEST = 'shows/LOAD_SHOWS_REQUEST';\nexport const LOAD_SHOWS_SUCCESS = 'shows/LOAD_SHOWS_SUCCESS';","import { get } from 'lodash';\nimport { createSelector } from 'reselect';\n\n\nexport const getShowsEntities = (state) =>\n  get(state, 'shows.shows');\n\nexport const getShowsIds = (state) =>\n  get(state, 'shows.showsIds');\n\nexport const getAllShows = createSelector(\n  getShowsEntities,\n  getShowsIds,\n  (shows, showsIds) => showsIds.map(id => shows[id]).sort((a, b) => a.name > b.name ? 1 : -1)\n);\n\nexport const getShowById = (showId) => createSelector(\n  getShowsEntities,\n  (shows) => shows[showId]\n);","import { get } from 'lodash';\nimport PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { loadEpisodes } from 'modules/episodes/actions';\nimport { getEpisodesByShowId } from 'modules/episodes/selectors';\nimport { loadShow } from 'modules/shows/actions';\nimport { getShowById } from 'modules/shows/selectors';\n\nimport s from './index.module.scss';\n\n\nconst mapStateToProps = (state, ownProps) => {\n  const showId = get(ownProps, 'match.params.showId');\n\n  return {\n    episodes: getEpisodesByShowId(showId)(state),\n    show: getShowById(showId)(state),\n    showId,\n  };\n};\n\nconst mapDispatchToProps = {\n  loadEpisodes,\n  loadShow,\n};\n\nconst ShowPage = ({ episodes, loadEpisodes, loadShow, show, showId }) => {\n\n  const history = useHistory();\n\n  useEffect(() => {\n    if (showId && !show) {\n      loadShow(showId);\n    }\n  }, [loadShow, show, showId]);\n\n  useEffect(() => {\n    if (showId && !episodes.length) {\n      loadEpisodes(showId);\n    }\n  }, [episodes, loadEpisodes, showId]);\n\n  return !show ? null : (\n    <div className={s.Show}>\n      <div className={s.ImageContainer}>\n        <img className={s.Image} alt={show.name} src={get(show, 'image.original')} />\n      </div>\n      <div className={s.ContentContainer}>\n        <div className={s.Name}>\n          {show.name}\n          {', '}\n          {show.premiered.substring(0, 4)}\n        </div>\n        <div className={s.Summary} dangerouslySetInnerHTML={{ __html: show.summary }} />\n        <div className={s.ShowProperty}>\n          <span>Genre</span>\n          {': '}\n          {show.genres.join(', ')}\n        </div>\n        <div className={s.ShowProperty}>\n          <span>Language</span>\n          {': '}\n          {show.language}\n        </div>\n        {episodes.length &&\n          <div className={s.Episodes}>\n            Episodes:\n            {episodes.map(episode =>\n              <div className={s.Episode} key={episode.id} onClick={() => history.push(`/episode/${episode.id}`)}>\n                {episode.season}\n                {'x'}\n                {episode.number}\n                {' - '}\n                {episode.name}\n              </div>\n            )}\n          </div>\n        }\n      </div>\n    </div>\n  );\n}\n\nShowPage.propTypes = {\n  episodes: PropTypes.array,\n  loadEpisodes: PropTypes.func.isRequired,\n  loadShow: PropTypes.func.isRequired,\n  show: PropTypes.object,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowPage);","import cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport s from './index.module.scss';\n\n\nconst RatingLabel = ({ className, value }) => {\n  return !value ? null : (\n    <div\n      className={cn(\n        className,\n        s.RatingLabel,\n        value >= 4 && s.ColorGrey,\n        value >= 7 && s.ColorGreen,\n        value >= 9 && s.ColorGold,\n      )}\n    >\n      {value}\n    </div>\n  );\n}\n\nRatingLabel.propTypes = {\n  className: PropTypes.string,\n  value: PropTypes.number,\n};\n\nexport default RatingLabel;","import { get } from 'lodash';\nimport PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport RatingLabel from 'components/RatingLabel';\nimport { loadShows } from 'modules/shows/actions';\nimport { getAllShows } from 'modules/shows/selectors';\n\nimport s from './index.module.scss';\n\n\nconst mapStateToProps = (state) => ({\n  shows: getAllShows(state),\n})\n\nconst mapDispatchToProps = {\n  loadShows,\n};\n\nconst ShowsPage = ({ loadShows, shows }) => {\n\n  const history = useHistory();\n\n  useEffect(() => {\n    loadShows();\n  }, [loadShows]);\n\n  return (\n    <div className={s.Shows}>\n      {shows.map(show =>\n        <div className={s.Show} key={show.id} onClick={() => history.push(`/show/${show.id}`)}>\n          <RatingLabel className={s.Rating} value={get(show, 'rating.average')} />\n          <img alt={show.name} src={get(show, 'image.medium')} />\n          <span className={s.Name}>\n            {show.name}\n            {', '}\n            {show.premiered.substring(0, 4)}\n          </span>\n          <span className={s.Genre}>\n            {show.genres.join(', ')}\n          </span>\n        </div>\n      )}\n    </div>\n  );\n}\n\nShowsPage.propTypes = {\n  loadShows: PropTypes.func.isRequired,\n  shows: PropTypes.array,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowsPage);","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport ShowPage from 'components/ShowPage';\nimport ShowsPage from 'components/ShowsPage';\n\nimport s from './index.module.scss';\n\n\nconst App = () => {\n  return (\n    <div className={s.App}>\n      <Switch>\n        <Route exact path=\"/\" component={ShowsPage} />\n        <Route exact path=\"/show/:showId\" component={ShowPage} />\n        <Route component={() => <div>page not found</div>} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;","import { uniq } from 'lodash';\nimport { combineReducers } from 'redux';\n\nimport * as episodesConstants from './constants';\n\n\nconst episodes = (state = {}, action) => {\n  switch (action.type) {\n    case episodesConstants.LOAD_EPISODES_SUCCESS:\n      return { ...state, ...action.episodes };\n    default:\n      return state;\n  }\n};\n\nconst episodesIds = (state = [], action) => {\n  switch (action.type) {\n    case episodesConstants.LOAD_EPISODES_SUCCESS:\n      return uniq([...state, ...action.episodesIds]);\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  episodes,\n  episodesIds,\n});","const apiUrl = 'https://api.tvmaze.com';\n\nexport const apiGET = (path) => {\n  return fetch(`${apiUrl}${path}`, { method: 'GET' })\n    .then(res => res.json())\n    .catch(err => console.log('Error: ', err));\n}","import { schema } from 'normalizr';\n\n\nconst episodeSchema = new schema.Entity('episodes');\n\nexport const episodesSchema = [episodeSchema];","import { put, takeLatest } from 'redux-saga/effects';\nimport { normalize } from 'normalizr';\n\nimport { apiGET } from 'utils';\n\nimport * as episodesActions from './actions';\nimport * as episodesConstants from './constants';\nimport { episodesSchema } from './schemas';\n\n\nfunction* loadEpisodesTask({ showId }) {\n  try {\n    const result = yield apiGET(`/shows/${showId}/episodes`);\n    const normalizedEpisodes = normalize(result.map(episode => ({ ...episode, showId })), episodesSchema);\n    yield put(episodesActions.loadEpisodesSuccess(normalizedEpisodes));\n  } catch (err) {\n    console.log('loadEpisodesTaskError', err);\n  }\n}\n\nfunction* watchLoadEpisodes() {\n  yield takeLatest(episodesConstants.LOAD_EPISODES_REQUEST, loadEpisodesTask);\n}\n\nexport default [\n  watchLoadEpisodes(),\n];","import reducer from './reducer';\nimport sagas from './sagas';\n\n\nexport default {\n  name: 'episodes',\n  reducer,\n  sagas,\n};","import { uniq } from 'lodash';\nimport { combineReducers } from 'redux';\n\nimport * as showsConstants from './constants';\n\n\nconst shows = (state = {}, action) => {\n  switch (action.type) {\n    case showsConstants.LOAD_SHOWS_SUCCESS:\n      return { state, ...action.shows };\n    default:\n      return state;\n  }\n};\n\nconst showsIds = (state = [], action) => {\n  switch (action.type) {\n    case showsConstants.LOAD_SHOWS_SUCCESS:\n      return uniq([...state, ...action.showsIds]);\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  shows,\n  showsIds,\n});","import { schema } from 'normalizr';\n\n\nconst showSchema = new schema.Entity('shows');\n\nexport const showsSchema = [showSchema];","import { put, takeLatest } from 'redux-saga/effects';\nimport { normalize } from 'normalizr';\n\nimport { apiGET } from 'utils';\n\nimport * as showsActions from './actions';\nimport * as showsConstants from './constants';\nimport { showsSchema } from './schemas';\n\n\nfunction* loadShowTask({ showId }) {\n  try {\n    const result = yield apiGET(`/shows/${showId}`);\n    const normalizedShows = normalize([result], showsSchema);\n    yield put(showsActions.loadShowsSuccess(normalizedShows));\n  } catch (err) {\n    console.log('loadShowTaskError', err);\n  }\n}\n\nfunction* loadShowsTask() {\n  try {\n    const result = yield apiGET('/search/shows?q=girls');\n    const normalizedShows = normalize(result.map(s => s.show), showsSchema);\n    yield put(showsActions.loadShowsSuccess(normalizedShows));\n  } catch (err) {\n    console.log('loadShowsTaskError', err);\n  }\n}\n\nfunction* watchLoadShow() {\n  yield takeLatest(showsConstants.LOAD_SHOW_REQUEST, loadShowTask);\n}\n\nfunction* watchLoadShows() {\n  yield takeLatest(showsConstants.LOAD_SHOWS_REQUEST, loadShowsTask);\n}\n\nexport default [\n  watchLoadShow(),\n  watchLoadShows(),\n];","import episodes from './episodes';\nimport shows from './shows';\n\n\nexport default [\n  episodes,\n  shows,\n];\n","import reducer from './reducer';\nimport sagas from './sagas';\n\n\nexport default {\n  name: 'shows',\n  reducer,\n  sagas,\n};","import { combineReducers } from 'redux';\n\nimport modules from './modules';\n\n\nlet reducers = {};\n\nmodules.forEach(module => {\n  if (module.reducer) {\n    reducers = { ...reducers, [module.name]: module.reducer };\n  }\n});\n\nexport default combineReducers(reducers);","import { all } from 'redux-saga/effects';\n\nimport modules from './modules';\n\n\nlet sagas = [];\n\nmodules.forEach(module => {\n  if (module.sagas) {\n    sagas = [...sagas, ...module.sagas];\n  }\n});\n\nexport default function* rootSaga() {\n  yield all(sagas);\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from 'components/App';\n\nimport './index.scss';\nimport configureStore from './store';\n\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <HashRouter basename=\"/\">\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);","import { applyMiddleware, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './rootReducer';\nimport rootSaga from './rootSaga';\n\n\nexport default () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(\n    rootReducer,\n    compose(applyMiddleware(sagaMiddleware))\n  );\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n}"],"sourceRoot":""}